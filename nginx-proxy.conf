http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;

    keepalive_timeout  65;

    # Definiere die map-Direktive
    map $ssl_client_fingerprint $reject {
        default 1;
sha1 Fingerprint=A0:60:E3:C4:8B:8E:C9:C1:77:34:33:43:1F:0B:81:73:A3:46:8D:F1 0;
sha1 Fingerprint=0A:D2:D0:40:D9:6E:20:8C:A7:47:AE:42:24:D2:F0:80:30:46:98:B3 0;
sha1 Fingerprint=55:C7:A5:C9:4D:EC:29:66:D7:8F:BC:EE:43:A7:76:BD:E2:C7:10:1C 0;
    }

    server {
        listen 80;
        server_name localhost;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name localhost;

        ssl_certificate /etc/nginx/certs/server.crt;
        ssl_certificate_key /etc/nginx/certs/server.key;

        

        # Aktiviere die Überprüfung von Client-Zertifikaten
        ssl_verify_client on;
        ssl_client_certificate /etc/nginx/certs/ca.crt;

        location / {
            # Überprüfe den Fingerabdruck des Client-Zertifikats
            if ($reject) { return 403; }

            proxy_pass http://nginx-server;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
}
