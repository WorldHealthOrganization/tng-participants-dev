# This is a basic workflow to help you get started with Actions

name: Check Country Delivery

# Controls when the workflow will run
on:
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron: '0 * * * *'
  workflow_dispatch:
env:
  # Setting an environment variable with the value of a configuration variable
  env_var: ${{ vars.ENV_CONTEXT_VAR }}
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - uses: actions/checkout@v3
      - name: Configure Python
        run: |
                pip install --upgrade pip
                pip install -r scripts/requirements.txt
        env:
          TEST: ${{toJSON(secrets)}}
      - name: Configure Bot
        run: |
          git config --global user.email ${{secrets.BOT_EMAIL_GITHUB}}
          git config --global user.name ${{secrets.BOT_USER_GITHUB}}
          git config --global user.password ${{secrets.BOT_TOKEN_GITHUB}}
          git config --global pull.rebase true
          git config --global branch.autosetuprebase always

      - name: Transitive Trust 
        run: | 
           git clone https://${{secrets.BOT_TOKEN_GITHUB}}@${{vars.TRANSITIVE_TRUST_SOURCE}} transit
           cd transit
           mkdir signing 
           cd signing       
           echo "${{secrets.NB_UP_SIGNING_PUB}}" > pub-key.pem
           echo "${{secrets.NB_UP_SIGNING_KEY}}" > priv-key.pem
           cat bla
           cd .. 
           ./extract.sh ${{vars.ENV}} 
           cd ..

      - name: Onboarding
        id: Onboarding
        env:
          GITHUB_TOKEN: ${{secrets.BOT_TOKEN_GITHUB}}
          SECRETS: ${{toJSON(secrets)}}
        run: |
          python scripts/delivery.py
