# This workflow will install Python dependencies and run tests 
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Quality Assurance (Folder Structure)
on:
  pull_request:    
    types: [ opened, synchronize, reopened, edited , review_request_removed]
jobs:
  check-folder-structure:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    if: contains(github.head_ref, 'onboardingRequest')
    steps:
    - uses: actions/checkout@v5
    - name: Set up Python 
      uses: actions/setup-python@v6
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f scripts/requirements.txt ]; then pip install -r scripts/requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Run QA checks
      env:
        REPORT_OUTPUT: cert_check_qa_report.md
      shell: bash
      run: |
        echo "REPORT_FILE=${REPORT_OUTPUT}" >> "$GITHUB_ENV"
        pytest -vs scripts/tests/test_country_folders.py --country-mode -C ${{  github.head_ref }} --tb=short -rfEx --md-report --md-report-verbose=1 --md-report-zeros=number --md-report-flavor gfm --md-report-exclude-outcomes xpassed xfailed --md-report-output "$REPORT_OUTPUT" --html=tng_onboarding_qa.html --self-contained-html --junit-xml=pytest.xml
    - name: Publish Test Results
      id: test-results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: |
          pytest.xml
    - name: Render the cert check QA report to the PR comment
      uses: marocchino/sticky-pull-request-comment@v2
      if: always()
      with:
        header: cert-check-qa-report
        path: ${{ env.REPORT_FILE }}
